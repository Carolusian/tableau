<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gapminder-data' inline='true' name='federated.0glv9ov0radnh3165t5jf12gu037' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gapminder-data' name='textscan.0k1ymji1n1m93k1d8mht21lbo6q5'>
            <connection class='textscan' directory='/Users/cs/Dropbox/code/r/econ7910/gapminder-data/data' filename='gapminder-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0k1ymji1n1m93k1d8mht21lbo6q5' name='gapminder-data.csv' table='[gapminder-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='life_expectancy' ordinal='2' />
            <column datatype='integer' name='income' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
            <column datatype='string' name='energy_use' ordinal='5' />
            <column datatype='string' name='co2_emissions' ordinal='6' />
            <column datatype='real' name='children_per_woman' ordinal='7' />
            <column datatype='integer' name='child_mortality' ordinal='8' />
            <column datatype='string' name='working_hours_weekly' ordinal='9' />
            <column datatype='real' name='gini' ordinal='10' />
            <column datatype='string' name='investments_percent_of_gdp' ordinal='11' />
            <column datatype='string' name='tax_revenue_percent_of_gdp' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[income]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>income</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_use</remote-name>
            <remote-type>129</remote-type>
            <local-name>[energy_use]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>energy_use</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_emissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[co2_emissions]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>co2_emissions</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>children_per_woman</remote-name>
            <remote-type>5</remote-type>
            <local-name>[children_per_woman]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>children_per_woman</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>child_mortality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[child_mortality]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>child_mortality</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>working_hours_weekly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[working_hours_weekly]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>working_hours_weekly</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gini]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>investments_percent_of_gdp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[investments_percent_of_gdp]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>investments_percent_of_gdp</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tax_revenue_percent_of_gdp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tax_revenue_percent_of_gdp]</local-name>
            <parent-name>[gapminder-data.csv]</parent-name>
            <remote-alias>tax_revenue_percent_of_gdp</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Child Mortality' datatype='integer' name='[child_mortality]' role='measure' type='quantitative' />
      <column caption='Children Per Woman' datatype='real' name='[children_per_woman]' role='measure' type='quantitative' />
      <column caption='Co2 Emissions' datatype='string' name='[co2_emissions]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy Use' datatype='string' name='[energy_use]' role='dimension' type='nominal' />
      <column caption='Gini' datatype='real' name='[gini]' role='measure' type='quantitative' />
      <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
      <column caption='Investments Percent Of Gdp' datatype='string' name='[investments_percent_of_gdp]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Tax Revenue Percent Of Gdp' datatype='string' name='[tax_revenue_percent_of_gdp]' role='dimension' type='nominal' />
      <column caption='Working Hours Weekly' datatype='string' name='[working_hours_weekly]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.455556' measure-ordering='alphabetic' measure-percentage='0.544444' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:country:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Lao&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='countries_by_continent' inline='true' name='federated.0fiahpe1s6akak19u5r5v0ckz0b3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='countries_by_continent' name='textscan.0if4gze0pfru5c19iymjz06yec6f'>
            <connection class='textscan' directory='/Users/cs/Dropbox/code/r/econ7910/gapminder-data/data' filename='countries_by_continent.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0if4gze0pfru5c19iymjz06yec6f' name='countries_by_continent.csv' table='[countries_by_continent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='integer' name='Number of Records' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries_by_continent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[countries_by_continent.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[countries_by_continent.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[countries_by_continent.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent' datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.571111' measure-ordering='alphabetic' measure-percentage='0.428889' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name=' Gapminder Clone'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gapminder Demo - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gapminder-data' name='federated.0glv9ov0radnh3165t5jf12gu037' />
            <datasource caption='countries_by_continent' name='federated.0fiahpe1s6akak19u5r5v0ckz0b3' />
          </datasources>
          <datasource-dependencies datasource='federated.0fiahpe1s6akak19u5r5v0ckz0b3'>
            <column caption='Continent' datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0glv9ov0radnh3165t5jf12gu037'>
            <column-instance column='[income]' derivation='Avg' name='[avg:income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[life_expectancy]' derivation='Avg' name='[avg:life_expectancy:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Income' datatype='integer' name='[income]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0glv9ov0radnh3165t5jf12gu037].[avg:life_expectancy:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:ok]'>
            <groupfilter expression='AVG([year]) &gt; 1960.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0glv9ov0radnh3165t5jf12gu037].[avg:life_expectancy:qk]</column>
            <column>[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0glv9ov0radnh3165t5jf12gu037].[avg:life_expectancy:qk]' field-type='quantitative' max='90.0' min='30.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0glv9ov0radnh3165t5jf12gu037].[avg:income:qk]' field-type='quantitative' max='100000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0glv9ov0radnh3165t5jf12gu037].[none:country:nk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0glv9ov0radnh3165t5jf12gu037].[none:country:nk]' />
              <color column='[federated.0fiahpe1s6akak19u5r5v0ckz0b3].[none:Continent:nk]' />
              <lod column='[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:qk]' />
              <size column='[federated.0glv9ov0radnh3165t5jf12gu037].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='3.6574585437774658' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0glv9ov0radnh3165t5jf12gu037].[avg:life_expectancy:qk]</rows>
        <cols>[federated.0glv9ov0radnh3165t5jf12gu037].[avg:income:qk]</cols>
        <pages>
          <column>[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{108313E4-8CEA-4076-8399-32E0CA1AF265}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Gapminder Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='65800' x='800' y='1000'>
              <zone h='98000' id='3' name=' Gapminder Clone' w='65800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='326' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='32600' x='66600' y='1000'>
              <zone h='2750' id='8' name=' Gapminder Clone' pane-specification-id='0' param='[federated.0glv9ov0radnh3165t5jf12gu037].[sum:population:qk]' type='size' w='32600' x='66600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2750' id='9' name=' Gapminder Clone' pane-specification-id='0' param='[federated.0fiahpe1s6akak19u5r5v0ckz0b3].[none:Continent:nk]' type='color' w='32600' x='66600' y='3750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13750' id='10' name=' Gapminder Clone' synchronized='1' type='currpage' w='32600' x='66600' y='6500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name=' Gapminder Clone' w='65800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name=' Gapminder Clone' pane-specification-id='0' param='[federated.0glv9ov0radnh3165t5jf12gu037].[sum:population:qk]' type='size' w='32600' x='66600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='9' name=' Gapminder Clone' pane-specification-id='0' param='[federated.0fiahpe1s6akak19u5r5v0ckz0b3].[none:Continent:nk]' type='color' w='32600' x='66600' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13750' id='10' name=' Gapminder Clone' synchronized='1' type='currpage' w='32600' x='66600' y='6500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C44D2D2A-94BA-480C-B66E-8AEC2E4EECFF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Gapminder Dashboard'>
      <viewpoints>
        <viewpoint name=' Gapminder Clone'>
          <current-page>
            <multibucket>
              <bucket>2018</bucket>
            </multibucket>
          </current-page>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0glv9ov0radnh3165t5jf12gu037].[avg:income:qk]</axis>
                </node-reference>
                <page-reference>
                  <fields>
                    <field>[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2018</bucket>
                  </multibucket>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0fiahpe1s6akak19u5r5v0ckz0b3].[none:Continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3F7CADB1-E40E-4E08-8211-2D497ABF406E}' />
    </window>
    <window class='worksheet' maximized='true' name=' Gapminder Clone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2018</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0fiahpe1s6akak19u5r5v0ckz0b3].[none:Continent:nk]</field>
            <field>[federated.0glv9ov0radnh3165t5jf12gu037].[Country (group)]</field>
            <field>[federated.0glv9ov0radnh3165t5jf12gu037].[attr:country:nk]</field>
            <field>[federated.0glv9ov0radnh3165t5jf12gu037].[none:country:nk]</field>
            <field>[federated.0glv9ov0radnh3165t5jf12gu037].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29BBCB95-CA3A-4D11-8868-AE6D067C6AD1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name=' Gapminder Clone' width='384'>
      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
      qP8PWLsmohH+soIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Gapminder Dashboard' width='384'>
      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
      AQghRJT6/yxUgm4v4UfEAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
